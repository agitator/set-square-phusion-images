#!/bin/bash dry-wit
# Copyright 2015-today Automated Computing Machinery S.L.
# Distributed under the terms of the GNU General Public License v3

function usage() {
cat <<EOF
$SCRIPT_NAME
$SCRIPT_NAME [-h|--help]
(c) 2016-today Automated Computing Machinery S.L.
    Distributed under the terms of the GNU General Public License v3

Changes the default locale from the DEFAULT_LOCALE environment variable.

Common flags:
    * -h | --help: Display this message.
    * -v: Increase the verbosity.
    * -vv: Increase the verbosity further.
    * -q | --quiet: Be silent.
EOF
}

# Requirements
function defineRequirements() {
  checkReq locale-gen;
}

## Defines the errors
## dry-wit hook
function defineErrors() {
  addError "INVALID_OPTION" "Unrecognized option";
  addError "DEFAULT_LOCALE_IS_MANDATORY" "The DEFAULT_LOCALE environment variable is mandatory";
}

## Validates the input.
## dry-wit hook
function checkInput() {

  local _flags=$(extractFlags $@);
  local _flagCount;
  local _currentCount;
  logDebug -n "Checking input";

  # Flags
  for _flag in ${_flags}; do
    _flagCount=$((_flagCount+1));
    case ${_flag} in
      -h | --help | -v | -vv | -q)
         shift;
         ;;
      *) logDebugResult FAILURE "failed";
         exitWithErrorCode INVALID_OPTION;
         ;;
    esac
  done

  if isEmpty "${DEFAULT_LOCALE}"; then
    logDebugResult FAILURE "failed";
    exitWithErrorCode DEFAULT_LOCALE_IS_MANDATORY;
  else
    logDebugResult SUCCESS "valid";
  fi
}

## Parses the input
## dry-wit hook
function parseInput() {

  local _flags=$(extractFlags $@);
  local _flagCount;
  local _currentCount;

  # Flags
  for _flag in ${_flags}; do
    _flagCount=$((_flagCount+1));
    case ${_flag} in
      -h | --help | -v | -vv | -q)
         shift;
         ;;
    esac
  done
}

## Changes the default locale.
## -> 1: The locale.
## Example:
##   change_default_locale "en_US.UTF-8"
function change_default_locale() {
  local _locale="${1}";
  echo "LANG=\"${_locale% *}\"" > /etc/default/locale;
  echo "LANGUAGE=\"${_locale% *}\"" >> /etc/default/locale;
  echo "LC_ALL=\"${_locale% *}\"" >> /etc/default/locale;
  echo "# Generated by ${SCRIPT_NAME} for locale ${_locale}" > /etc/bash.locale;
  echo "export LC_ALL=\"${_locale% *}\"" >> /etc/bash.locale;
  echo "export LC_CTYPE=\"${_locale% *}\"" >> /etc/bash.locale;
  echo "export LANG=\"${_locale%.*}\"" >> /etc/bash.locale;
  echo "export LANGUAGE=\"${_locale% *}\"" >> /etc/bash.locale;
  echo "${_locale} ${_locale#*.}" >> /etc/locale.gen;
  locale-gen
  dpkg-reconfigure locales
}

## Main logic
## dry-wit hook
function main() {
  if [ -n "${LOCALES}" ]; then \
      for _locale in ${LOCALES}; do \
        ${APTGET_INSTALL} language-pack-${_locale%_*}-base && \
            echo "${_locale}" >> /etc/locale.gen; \
        echo "${_locale} ${_locale#* }" > /var/lib/locales/supported.d/${_locale%_*}; \
      done; \
  fi
  change_default_locale "${DEFAULT_LOCALE}";
}
