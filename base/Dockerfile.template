# ${NAMESPACE}/${IMAGE}:${TAG} Dockerfile (generated at ${TIME})
FROM ${ROOT_IMAGE}

MAINTAINER ${MAINTAINER}

ENV DEBIAN_FRONTEND noninteractive
ENV TERM linux
ENV ENABLE_CRON true
ENV ENABLE_MONIT true
ENV ENABLE_RSNAPSHOT true
ENV ENABLE_SSH false
ENV ENABLE_SYSLOG true

COPY dry-wit aptget-install.sh aptget-install.inc.sh aptget-cleanup.sh aptget-cleanup.inc.sh \
     /usr/local/bin/
COPY 20_create_rsnapshot_conf.sh 20_create_rsnapshot_conf.inc.sh \
     30_create_monit_filesystem_check.sh 30_create_monit_filesystem_check.inc.sh \
     31_create_monit_http_conf.sh 31_create_monit_http_conf.inc.sh \
     32_create_monit_port_check.sh 32_create_monit_port_check.inc.sh \
     /etc/my_init.d/
COPY display-dockerfile.sh /usr/local/bin/Dockerfile
COPY display-file.sh /usr/local/bin/show
COPY display-help.sh /usr/local/bin/help
COPY my_exec /sbin/my_exec
COPY rsnapshot.daily /etc/cron.daily/rsnapshot.daily
COPY rsnapshot.weekly /etc/cron.weekly/rsnapshot.weekly
COPY rsnapshot.monthly /etc/cron.monthly/rsnapshot.monthly
COPY remote-rsyslogd.conf /etc/rsyslog.d/10-rsyslog.conf

RUN mkdir -p /etc/my_exec.d && \
    mkdir -p /etc/service/.template/log && \
    mkdir -p /etc/service/monit/log && \
    mkdir -p /etc/service/cron/log && \
    touch /var/local/docker-installed-packages.txt && \
    chmod +x /usr/local/bin/dry-wit /usr/local/bin/aptget-install.sh /usr/local/bin/aptget-cleanup.sh && \
    chmod +x /etc/my_init.d/20_create_rsnapshot_conf.sh && \
    chmod -x /etc/my_init.d/20_create_rsnapshot_conf.inc.sh && \
    chmod +x /etc/my_init.d/30_create_monit_filesystem_check.sh && \
    chmod -x /etc/my_init.d/30_create_monit_filesystem_check.inc.sh && \
    chmod +x /etc/my_init.d/31_create_monit_http_conf.sh && \
    chmod -x /etc/my_init.d/31_create_monit_http_conf.inc.sh && \
    chmod +x /etc/my_init.d/32_create_monit_port_check.sh && \
    chmod -x /etc/my_init.d/32_create_monit_port_check.inc.sh && \
    chmod +x /usr/local/bin/show && \
    chmod +x /sbin/my_exec && \
    chmod +x /etc/cron.daily/rsnapshot.daily && \
    chmod +x /etc/cron.weekly/rsnapshot.weekly && \
    chmod +x /etc/cron.monthly/rsnapshot.monthly    

COPY my_exec.cron /etc/my_exec.d/cron
COPY my_exec.help /etc/my_exec.d/help
COPY my_exec.monit /etc/my_exec.d/monit
COPY my_exec.rsnapshot /etc/my_exec.d/rsnapshot
COPY my_exec.ssh /etc/my_exec.d/ssh
COPY my_exec.syslog /etc/my_exec.d/syslog

COPY logger /etc/service/.template/log/run
COPY service.cron /etc/service/cron/run
COPY service.monit /etc/service/monit/run

RUN mkdir /Dockerfiles && \
    /etc/my_init.d/00_regen_ssh_host_keys.sh -f && \
    ${APTGET_INSTALL} wget rsnapshot monit mailutils gettext && \
    cd /bin && rm -f /bin/sh && ln -s /bin/bash sh && \
    mkfifo /var/spool/postfix/public/pickup && \
    chmod +x /etc/service/.template/log/run && \
    cp /etc/service/.template/log/run /etc/service/cron/log/run && \
    cp /etc/service/.template/log/run /etc/service/monit/log/run && \
    chmod +x /etc/service/cron/run  && \
    chmod +x /etc/service/monit/run  && \
    chmod +x -- /usr/local/bin/help /usr/local/bin/Dockerfile /usr/local/bin/show && \    
    ln -s -- /usr/local/bin/help /usr/local/bin/-h && \
    ln -s -- /usr/local/bin/help /usr/local/bin/--help && \
    ln -s -- /usr/local/bin/Dockerfile /usr/local/bin/dockerfile && \
    sed -i 's/^#logfile/logfile/g' /etc/rsnapshot.conf && \
    sed -i 's/^#cmd_ssh/cmd_ssh/g' /etc/rsnapshot.conf && \
    sed -i 's|^#ssh_args.*|ssh_args\t-i /etc/ssh/ssh_host_dsa_key|g' /etc/rsnapshot.conf && \
    sed -i 's|^\(\s*\)set logfile\(.*\)|#\1set logfile\2|g' /etc/monit/monitrc && \
    ${APTGET_CLEANUP}

ENTRYPOINT ["/sbin/my_exec"]
CMD ["/sbin/my_init"]

COPY monit-syslog.conf /etc/monit/conf.d/syslog.conf
COPY monit-mail.conf /etc/monit/conf.d/mail.conf

COPY README /README
COPY ${LICENSE_FILE} /LICENSE
COPY ${COPYRIGHT_PREAMBLE_FILE} /Dockerfiles/copyright-preamble.txt
COPY Dockerfile /Dockerfiles/${NAMESPACE}-${IMAGE}.${TAG}
COPY Dockerfile /Dockerfiles/Dockerfile

# For instructions on how to use this image, please run
# docker run -it ${NAMESPACE}/${IMAGE}:${TAG} help

# Children must provide:
# - /README: to describe the image.
# - /LICENSE: rights and restrictions on how to use, inspect, modify and distribute this image.
# - /Dockerfiles/copyright-preamble.txt: A short summary of the license. It's included, as well
#   as the README, when displaying the help to the user.

# Children should provide:
# - service: to run the process (letting runit handling forking it).
# - monit.conf: how to monitor the process (or disable monit via declaring ENABLE_MONIT=false).
# - backup.sh: a custom backup script, if necessary.
#
# And then add steps in their Dockerfile such as the following:
# COPY README /README
# RUN mkdir /etc/service/${IMAGE} && cp -r /etc/service/.template/* /etc/service/${IMAGE}
# COPY service /etc/service/${IMAGE}/run
# RUN chmod +x /etc/service/${IMAGE}/run
# COPY monit.conf /etc/monit/monitrc.d/${DOLLAR}{IMAGE}.conf
# COPY backup.sh /usr/local/bin/backup-${DOLLAR}{NAMESPACE}-${DOLLAR}{IMAGE}_${DOLLAR}{TAG}.sh

# If the process is itself a daemon which cannot be run in foreground,
# then provide a LSB-like script and call it from within /etc/rc.local:
# COPY service /etc/rc.local
# RUN chmod +x /etc/rc.local
#
# Before finishing the Dockerfile, please RUN ${DOLLAR}{APTGET_CLEANUP} if the
# image installs packages via ${DOLLAR}{APTGET_INSTALL}.
#
# Additionaly, every Dockerfile should add its own Dockerfile to the /Dockerfiles
# folder:
# COPY Dockerfile /Dockerfiles/${DOLLAR}{NAMESPACE}-${DOLLAR}{IMAGE}.${DOLLAR}{TAG}
#
# And last, adding comments on how to run the image is very helpful.
